apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: apply-and-wait-for-subscription
  namespace: openshift-pipelines
spec:
  steps:
  - args:
    - |-
      #!/bin/bash
      set -e

      oc apply -f acm-deploy/resources/acm_namespace.yaml
      oc apply -f acm-deploy/resources/acm_operatorgroup.yaml
      oc apply -f acm-deploy/resources/acm_subscription.yaml

      oc get secret multiclusterhub-operator-pull-secret --namespace=openshift-marketplace -o json | jq 'del(.metadata.namespace,.metadata.resourceVersion,.metadata.uid) | .metadata.creationTimestamp=null' | oc apply --namespace=open-cluster-management -f -

      _ATTEMPTS=0
      until oc get sub acm-operator-subscription -n open-cluster-management -o jsonpath='{.status.currentCSV}' | grep -q "advanced";
      do 
          echo "Waiting for CSV..."
          _ATTEMPTS=$((_ATTEMPTS + 1))
          sleep 5;
          if [[ $_ATTEMPTS == 5 ]]; then
              echo "Failed to find the CSV in allotted time"
              exit 1
          fi
      done

      _CURRENT_CSV=$(oc get sub acm-operator-subscription -n open-cluster-management -o jsonpath='{.status.currentCSV}')
      echo $_CURRENT_CSV

      _ATTEMPTS=0
      until oc get csv ${_CURRENT_CSV} -n open-cluster-management -ojsonpath='{.status.phase}' | grep "Succeeded";
      do 
          echo "Waiting for CSV to installation to complete..."
          _ATTEMPTS=$((_ATTEMPTS + 1))
          sleep 15;
          if [[ $_ATTEMPTS == 10 ]]; then
              echo "The CSV failed to install in the allotted time"
              exit 1
          fi
      done

    command:
    - /bin/bash
    - -c
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
    name: apply
    resources: {}
    workingDir: /workspace/source
  workspaces:
  - name: source
