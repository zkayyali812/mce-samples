apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: apply-and-wait-for-subscription
  namespace: openshift-pipelines
spec:
  params:
  - name: namespace
    default: open-cluster-management
    description: The namespace to deploy ACM into
    type: string
  - name: imagePullSecret
    default: multiclusterhub-operator-pull-secret
    description: The image pull secret used to deploy the catalogsources in 'openshift-marketplace' namespace
    type: string
  steps:
  - args:
    - |-
      #!/bin/bash
      set -e

      oc create namespace $(inputs.params.namespace) --dry-run=client -o yaml | oc apply -f -

      oc apply -f acm-deploy/resources/acm_operatorgroup.yaml -n $(inputs.params.namespace)
      oc apply -f acm-deploy/resources/acm_subscription.yaml -n $(inputs.params.namespace)

      oc get secret $(inputs.params.imagePullSecret) --namespace=openshift-marketplace -o yaml | sed "s/namespace: .*/namespace: $(inputs.params.namespace)/"  | oc apply -f -

      _ATTEMPTS=0
      until oc get sub acm-operator-subscription -n $(inputs.params.namespace) -o jsonpath='{.status.currentCSV}' | grep -q "advanced";
      do 
          echo "Waiting for CSV..."
          _ATTEMPTS=$((_ATTEMPTS + 1))
          sleep 5;
          if [[ $_ATTEMPTS == 5 ]]; then
              echo "Failed to find the CSV in allotted time"
              exit 1
          fi
      done

      _CURRENT_CSV=$(oc get sub acm-operator-subscription -n $(inputs.params.namespace) -o jsonpath='{.status.currentCSV}')
      echo $_CURRENT_CSV

      _ATTEMPTS=0
      until oc get csv ${_CURRENT_CSV} -n $(inputs.params.namespace) -ojsonpath='{.status.phase}' | grep "Succeeded";
      do 
          echo "Waiting for CSV to installation to complete..."
          _ATTEMPTS=$((_ATTEMPTS + 1))
          sleep 15;
          if [[ $_ATTEMPTS == 10 ]]; then
              echo "The CSV failed to install in the allotted time"
              exit 1
          fi
      done

    command:
    - /bin/bash
    - -c
    image: image-registry.openshift-image-registry.svc:5000/openshift/cli:latest
    name: apply
    resources: {}
    workingDir: /workspace/source
  workspaces:
  - name: source
