apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: deploy-sample-apps
  namespace: multicluster-engine
spec:
  params:
  - name: aws-secret
    type: string
    description: The AWS Secret to use for the pipeline. Defined in the pipeline namespace.
    default: "aws-creds"
  - name: ocp-pull-secret
    type: string
    description: The OCP Pull Secret to use for the pipeline
    default: "ocp-pull-secret"
  - name: namespace
    type: string
    description: The namespace to deploy the samples in
    default: "multicluster-engine"
  tasks:
  - name: fetch-repository
    params:
    - name: url
      value: https://github.com/zkayyali812/mce-samples.git
    - name: revision
      value: main
    - name: deleteExisting
      value: "true"
    - name: gitInitImage
      value: registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:afc5d3f9efe26c7042635d43b8ffd09d67936e3d0b6b901dc08a33e20313d361
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-workspace
  - name: apply-subscription
    runAfter:
    - fetch-repository
    taskRef:
      kind: Task
      name: apply-and-wait-for-subscription
    workspaces:
    - name: source
      workspace: shared-workspace
  # - name: get-cluster
  #   params:
  #   - name: namespace
  #     value: $(params.namespace)
  #   runAfter:
  #   - apply-clusterpool
  #   taskRef:
  #     kind: Task
  #     name: get-cluster
  #   workspaces:
  #   - name: source
  #     workspace: shared-workspace
  # - name: import-cluster
  #   params:
  #   - name: namespace
  #     value: $(params.namespace)
  #   runAfter:
  #   - get-cluster
  #   taskRef:
  #     kind: Task
  #     name: import-cluster
  #   workspaces:
  #   - name: source
  #     workspace: shared-workspace
  # - name: apply-manifestwork
  #   runAfter:
  #   - import-cluster
  #   taskRef:
  #     kind: Task
  #     name: apply-manifestwork
  #   workspaces:
  #   - name: source
  #     workspace: shared-workspace
  # finally:
  #   - name: report-slack-status
  #     params:
  #       - name: pipelinerun-name
  #         value: $(context.pipelineRun.name)
  #       - name: pipelinerun-namespace
  #         value: $(context.pipelineRun.namespace)
  #       # Task Statuses below. OpenShift Pipelines does not support aggregate task statuses until piplines 0.24.x
  #       - name: cloneRepoStatus
  #         value: "$(tasks.fetch-repository.status)"
  #       - name: applyClusterpoolStatus
  #         value: "$(tasks.apply-clusterpool.status)"
  #       - name: getClusterStatus
  #         value: "$(tasks.get-cluster.status)"
  #       - name: importClusterStatus
  #         value: "$(tasks.import-cluster.status)"
  #       - name: applyManifestworkStatus
  #         value: "$(tasks.apply-manifestwork.status)"
  #     taskRef:
  #       name: report-slack-status
  # workspaces:
  # - name: shared-workspace